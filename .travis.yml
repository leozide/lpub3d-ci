language: cpp
sudo: required
dist: trusty

cache: ccache

git:
  depth: 200

addons:
  apt:
   packages:
    - fakeroot

branches:
  only:
  - master

matrix:
 fast_finish: true
 include:
  - os: linux
    compiler: gcc
    env:
     - QT_BASE=59
  - os: osx
    compiler: clang
    env:
     - QT_BASE=59

before_install:
  # Skip build if the commit message contains [skip travis] or [travis skip]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[(skip travis|travis skip)\]'
      && echo "[skip travis] detected, exiting."
      && exit 0 || true
  # Create package if commit message contains [create pkg]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[create pkg\]'
      && echo "[create pkg] detected."
      && export LP3D_CREATE_PKG=yes || true
  # Add private qt repositories
  - if [[ "$QT_BASE" = "52" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt521-trusty -y; fi
  - if [[ "$QT_BASE" = "53" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt532-trusty -y; fi
  - if [[ "$QT_BASE" = "54" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt542-trusty -y; fi
  - if [[ "$QT_BASE" = "55" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y; fi
  - if [[ "$QT_BASE" = "56" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt562-trusty -y; fi
  - if [[ "$QT_BASE" = "57" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt571-trusty -y; fi
  - if [[ "$QT_BASE" = "58" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt58-trusty  -y; fi
  - if [[ "$QT_BASE" = "59" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt591-trusty -y; fi
  # Update repository index
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo apt-get update -qq;
    else
      brew update;
    fi

install:
  # Install qt5 on Linux
  - if [[ "$QT_BASE" = "52" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt52base; source /opt/qt52/bin/qt52-env.sh; fi
  - if [[ "$QT_BASE" = "53" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt53base; source /opt/qt53/bin/qt53-env.sh; fi
  - if [[ "$QT_BASE" = "54" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt54base; source /opt/qt54/bin/qt54-env.sh; fi
  - if [[ "$QT_BASE" = "55" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt55base; source /opt/qt55/bin/qt55-env.sh; fi
  - if [[ "$QT_BASE" = "56" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt56base; source /opt/qt56/bin/qt56-env.sh; fi
  - if [[ "$QT_BASE" = "57" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt57base; source /opt/qt57/bin/qt57-env.sh; fi
  - if [[ "$QT_BASE" = "58" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt58base; source /opt/qt58/bin/qt58-env.sh; fi
  - if [[ "$QT_BASE" = "59" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt59base; source /opt/qt59/bin/qt59-env.sh; fi
  # Install qt5 on MacOS
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      if [ "$QT_BASE" = "55" ]; then
        brew install qt55;
        brew link --force qt55;
      else
        brew install qt5;
        brew link --force qt5;
      fi;
      git clone https://github.com/trevorsandy/lpub3d_macos_3rdparty.git ../lpub3d_macos_3rdparty;
      wget http://www.ldraw.org/library/updates/complete.zip -O mainApp/extras/complete.zip;
      wget http://www.ldraw.org/library/unofficial/ldrawunf.zip -O mainApp/extras/lpub3dldrawunf.zip;
    fi

script:
  - qmake -v
  - if [ "$LP3D_CREATE_PKG" = "yes" ]; then
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then source /builds/linux/CreateDeb.sh; fi;
      if [ "$TRAVIS_OS_NAME" = "osx" ]; then source /builds/macx/CreateDmg.sh; fi;
    else
     qmake -r;
     make;
    fi

deploy:
  provider: releases
  api_key:
    secure: rnf4qpF81ISjm8q13OgkAaoKZReXpjODhU9fbGFMhMydHrda1ezLubGXRU9OKGu4
  file: $LP3D_Download_Package
  overwrite: true
  skip_cleanup: true
  on:
    tags: true
    condition: $LP3D_CREATE_PACKAGE = true

notifications:
  email:
    on_success: never
    on_failure: always
