language: cpp
sudo: required
dist: trusty
cache: ccache

git:
  depth: 200

branches:
  only:
  - master

cache:
  directories:
  - ${HOME}/ldraw
  - ${HOME}/Library/ldraw
  - ${LP3D_DIST_DIR_PATH}

matrix:
 fast_finish: true
 include:
  - os: linux
    compiler: gcc
    env:
     - QT_BASE=59
  - os: osx
    compiler: clang
    env:
     - QT_BASE=59

before_install:
  # Skip build if the commit message contains [skip travis] or [travis skip]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[(skip travis|travis skip)\]'
      && echo "[skip travis] detected, exiting."
      && exit 0 || true
  # Build package if commit message contains [build pkg]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[build pkg\]'
      && echo "[build pkg] detected."
      && export LP3D_BUILD_PKG=yes || true
  # Build and deploy package if commit message contains [deploy pkg]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[deploy pkg\]'
      && echo "[deploy pkg] detected."
      && export LP3D_BUILD_PKG=yes
      && export LP3D_DEPLOY_PKG=yes || true
  # Add private qt repositories
  - if [[ "$QT_BASE" = "52" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt521-trusty -y; fi
  - if [[ "$QT_BASE" = "53" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt532-trusty -y; fi
  - if [[ "$QT_BASE" = "54" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt542-trusty -y; fi
  - if [[ "$QT_BASE" = "55" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y; fi
  - if [[ "$QT_BASE" = "56" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt562-trusty -y; fi
  - if [[ "$QT_BASE" = "57" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt571-trusty -y; fi
  - if [[ "$QT_BASE" = "58" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt58-trusty  -y; fi
  - if [[ "$QT_BASE" = "59" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo add-apt-repository ppa:beineri/opt-qt592-trusty -y; fi
  # Update repository index and download package dependencies/docker-engine if required
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo apt-get update -qq;
    else
      brew update;
      brew install ccache openexr sdl2 tinyxml gl2ps libjpeg minizip;
      export PATH="/usr/local/opt/ccache/libexec:$PATH";
      export LP3D_DIST_DIR=lpub3d_macos_3rdparty && mkdir -p ../${LP3D_DIST_DIR};
      export LP3D_DIST_DIR_PATH=$(readlink -e ../${LP3D_DIST_DIR});
    fi

install:
  # Install qt5 on Linux
  - if [[ "$QT_BASE" = "52" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt52base; source /opt/qt52/bin/qt52-env.sh; fi
  - if [[ "$QT_BASE" = "53" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt53base; source /opt/qt53/bin/qt53-env.sh; fi
  - if [[ "$QT_BASE" = "54" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt54base; source /opt/qt54/bin/qt54-env.sh; fi
  - if [[ "$QT_BASE" = "55" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt55base; source /opt/qt55/bin/qt55-env.sh; fi
  - if [[ "$QT_BASE" = "56" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt56base; source /opt/qt56/bin/qt56-env.sh; fi
  - if [[ "$QT_BASE" = "57" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt57base; source /opt/qt57/bin/qt57-env.sh; fi
  - if [[ "$QT_BASE" = "58" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt58base; source /opt/qt58/bin/qt58-env.sh; fi
  - if [[ "$QT_BASE" = "59" && "$TRAVIS_OS_NAME" = "linux" && "$LP3D_BUILD_PKG" = "" ]]; then sudo apt-get install -qq qt59base; source /opt/qt59/bin/qt59-env.sh; fi
  # Install qt5 on MacOS, clone lpub3d_macos_3rd party repository and download LDraw library archive files
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      if [ "$QT_BASE" = "55" ]; then
        brew install qt55;
        brew link --force qt55;
      else
        brew install qt5;
        brew link --force qt5;
      fi;
      wget http://www.ldraw.org/library/updates/complete.zip -O ../complete.zip && cp -f ../complete.zip mainApp/extras;
      wget http://www.ldraw.org/library/unofficial/ldrawunf.zip -O mainApp/extras/lpub3dldrawunf.zip;
      chmod +x builds/utilities/CreateRenderers.sh && env OBS=false WD=$PWD/.. ./builds/utilities/CreateRenderers.sh;
    fi
  # Update docker-engine, docker-compose and get application version strings
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      if [ "$LP3D_BUILD_PKG" = "yes" ]; then
        curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | sudo apt-key add -;
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable";
        sudo apt-get update -qq;
        sudo apt-get -y install docker-ce;
        docker version;
        export DOCKER_COMPOSE_VERSION=1.17.0-rc1;
        sudo rm /usr/local/bin/docker-compose;
        curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose;
        chmod +x docker-compose;
        sudo mv docker-compose /usr/local/bin;
        docker-compose version;
        ComposePath=builds/linux/docker-compose;
        sudo mkdir -p $PWD/builds/releases;
        export ReleasesPath=$PWD/builds/releases;
        _PRO_FILE_PWD_=$PWD/mainApp;
        source builds/utilities/update-config-files.sh;
      fi;
    fi

script:
  # Build distributions package (using docker-compose for linux builds) or just compile the code
  - if [ "$LP3D_BUILD_PKG" = "yes" ]; then
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        docker-compose -f $ComposePath/docker-compose-cibuild-linux.yml run --rm archlinux_2017.10.01;
        docker-compose -f $ComposePath/docker-compose-cibuild-linux.yml run --rm fedora_25;
        docker-compose -f $ComposePath/docker-compose-cibuild-linux.yml run --rm ubuntu_xenial;
        echo " Package Files " `ls $ComposePath`;
      fi;
      if [ "$TRAVIS_OS_NAME" = "osx" ]; then
        chmod +x builds/macx/CreateDmg.sh && ./builds/macx/CreateDmg.sh;
        echo " Package  Files " `ls ../dmgbuild/DMGS`;
      fi;
    else
      qmake -v;
      qmake -r;
      make;
    fi

# Gather up and move build artefacts to releases directory
before_deploy:
  - if [ "$LP3D_BUILD_PKG" = "yes" ]; then
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        Df_Pkg=`ls $ComposePath/LPub3D-${LP3D_APP_VERSION_LONG}*.pkg.tar.xz`;
        Uf_Pkg=`ls $ComposePath/LPub3D_UpdateMaster_${LP3D_APP_VERSION}*.pkg.tar.xz`;
        Df_Rpm=`ls $ComposePath/LPub3D-${LP3D_APP_VERSION_LONG}*.rpm`;
        Uf_Rpm=`ls $ComposePath/LPub3D_UpdateMaster_${LP3D_APP_VERSION}*.rpm`;
        Df_Deb=`ls $ComposePath/LPub3D-${LP3D_APP_VERSION_LONG}*.deb`;
        Uf_Deb=`ls $ComposePath/LPub3D_UpdateMaster_${LP3D_APP_VERSION}*.deb`;
        sudo cp -f $Df_Pkg $Uf_Pkg $Df_Rpm $Uf_Rpm $Df_Deb $Uf_Deb $ReleasesPath;
      fi;
      if [ "$TRAVIS_OS_NAME" = "osx" ]; then
        Df_Dmg=`ls ../dmgbuild/DMGS/LPub3D*.dmg`;
        Uf_Dmg=`ls ../dmgbuild/DMGS/LPub3D-UpdateMaster*.dmg`;
        sudo cp -f $Df_Dmg $Uf_dmg $$ReleasesPath/;
      fi;
      echo " Release Files " `ls $ReleasesPath`;
    fi

deploy:
  provider: releases
  api_key:
    secure: GRl0LOJ8M5ow1qik8t2+tJsqMDo53v/TRfxprWg5C+3DR3ny/CgR5mODMtpR4LgSyMeD5yhGovxHAbzgUyutne9PT0BagI8zdt/ZMqcLnvPQyzJlhfy3t2TVcJRoVXcoUUF0ZJHrpr9WD8C7xnjMp7w/j+HThQuX+8CD3gCwZhYkDRuNgtJY/PT+nwITjC4WJuF0xxYOyLJROebQZ1LJ24HY0zVtg+JJZPslkQHgoBg/ozO8JNXgYaYe3VgcyQSnUMqE/SjMBGYMR9RlNwYXCJLeYHiY3fej33z7UPZOH/kPQ8RhKpJi9qqOTtYj38dTxmpiJjOJ4SyeKXvsyymc5ekwSdlJe6rVWKKAXFMegH/4i3Nk8HKmfxMPLklprusFEMQo2CdA5UeNRuWJ/HfDpywbQwFLC6ThNZcS6wqOqf2Rzy6QRNFWlH9eJoiSMyQRVTFGwQ3bf2MXXJSloFuxRpGYoejWt36O+rNZnTR6+Xz1r2KyaaFizCGen082klzmfdoCl0mh+m9Jix7ypzgNBKISFI5DTbjr6Qt+D5dVdp5PWGBAbhTd6JtcG64P9fDUWq5X9ypFj6Jb1626sHFlYQKCSX+lEpjbd4UTSbTxO35NMTO1g90xKMJeIpvsCwm9DcWl+jGmt9cwSHxTQuWkeEaUcoywYvA4kTjIpDuIaR8=
  file_glob: true
  file: $ReleasesPath/*
  overwrite: true
  skip_cleanup: true
  on:
    repo: trevorsandy/lpub3d-ci
    condition: $LP3D_DEPLOY_PKG = yes

notifications:
  email:
    on_success: never
    on_failure: always
