#!/bin/bash
#
# This pre-commit hook updates the LPub3D version information when you go to commit.
#
# To use this script copy it to .git/hooks/pre-commit and make it executable.
#
## Automatically generate git revision info
##
## Example:
##   [master]v2.0.0-beta-191(a830382)
##
## Install:
##   pre-commit:
##   cp builds/utilities/git-create-revisioninfo-hook.sh .git/hooks/pre-commit
##
## Ignore Increment:
##   In instances where you do NOT want the version info incremented,
##   add the environment variable doIncrement=FALSE to your git call.
##   eg doIncrement=FALSE git commit -m "Message - 00 [ci skip].
##   This is useful when you change the major version number for example.
##
exec 1>&2
#doIncrement=_Blocked                     # routine disabled - comment line to enable
if test x"$doIncrement" = x""; then
  tag_long=`git describe --tags --long`
  tag_short=`git describe --tags --abbrev=0`
  commit_count=`git rev-list HEAD --count`
  sha_hash_short=`git rev-parse --short HEAD`

  valid_commit="yes"
  if test x"`git diff HEAD --name-only`" = x""; then valid_commit="no"; fi

  tmp1=${tag_long#*-}       # remove prefix ending in "-"
  tmp2=${tag_short//./" "}  # replace . with " "
  version_=${tmp2/v/}       # replace v with ""
  revision=${tmp1%-*}
  read major minor patch <<< ${version_}

  echo "0. Incrementing Git version info..."
  echo "   To disable, use: 'doIncrement=FALSE git commit -m \"Commit Message\"'"
  echo "   Old_revision..........$revision"
  echo "   Old_build (count).....$commit_count"
  if test x"$valid_commit" = x"yes"; then ((revision++)); ((commit_count++)); fi

  working_dir=$PWD/mainApp
  chmod +x builds/utilities/update-config-files.sh
  ./builds/utilities/update-config-files.sh $working_dir $major $minor $patch $revision $commit_count $sha_hash_short

  git add .
fi

